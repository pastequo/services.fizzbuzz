// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "the service can apply fizzbuzz algorithm and statistics about the  calls.",
    "title": "fizzbuzz",
    "contact": {
      "name": "pastequo@github"
    },
    "version": "#VERSION"
  },
  "paths": {
    "/algo/fizzbuzz": {
      "post": {
        "summary": "Creates a string according to the fizzbuzz algo.",
        "operationId": "fizzbuzz",
        "parameters": [
          {
            "x-nullable": false,
            "description": "fizzbuzz algo parameter to use.",
            "name": "fizzbuzzParams",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fizzbuzzParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully applied.",
            "schema": {
              "type": "string",
              "x-isnullable": true
            }
          },
          "204": {
            "description": "Successfull but empty."
          },
          "400": {
            "$ref": "#/responses/badRequest"
          },
          "500": {
            "description": "Internal error."
          },
          "503": {
            "description": "Not available."
          }
        }
      }
    },
    "/algo/fizzbuzz/stats": {
      "get": {
        "summary": "get stats about the most used parameters",
        "operationId": "stats",
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "type": "object",
              "required": [
                "count"
              ],
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32"
                },
                "parameter": {
                  "$ref": "#/definitions/fizzbuzzParams"
                }
              }
            }
          },
          "500": {
            "description": "Internal error."
          },
          "503": {
            "description": "Not available."
          }
        }
      }
    },
    "/healthcheck": {
      "get": {
        "summary": "Healthcheck route.",
        "operationId": "healthcheck",
        "responses": {
          "200": {
            "description": "Ok."
          }
        }
      }
    }
  },
  "definitions": {
    "errorMsg": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "ErrInvalidParams",
            "ErrInvalidObject"
          ]
        }
      }
    },
    "fizzbuzzParams": {
      "type": "object",
      "required": [
        "limit",
        "word1",
        "word2"
      ],
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "word1": {
          "$ref": "#/definitions/fizzbuzzWord"
        },
        "word2": {
          "$ref": "#/definitions/fizzbuzzWord"
        }
      }
    },
    "fizzbuzzWord": {
      "type": "object",
      "properties": {
        "multiple": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "word": {
          "type": "string",
          "x-isnullable": false
        }
      }
    }
  },
  "responses": {
    "badRequest": {
      "description": "Bad request.",
      "schema": {
        "$ref": "#/definitions/errorMsg"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "the service can apply fizzbuzz algorithm and statistics about the  calls.",
    "title": "fizzbuzz",
    "contact": {
      "name": "pastequo@github"
    },
    "version": "#VERSION"
  },
  "paths": {
    "/algo/fizzbuzz": {
      "post": {
        "summary": "Creates a string according to the fizzbuzz algo.",
        "operationId": "fizzbuzz",
        "parameters": [
          {
            "x-nullable": false,
            "description": "fizzbuzz algo parameter to use.",
            "name": "fizzbuzzParams",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fizzbuzzParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully applied.",
            "schema": {
              "type": "string",
              "x-isnullable": true
            }
          },
          "204": {
            "description": "Successfull but empty."
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/errorMsg"
            }
          },
          "500": {
            "description": "Internal error."
          },
          "503": {
            "description": "Not available."
          }
        }
      }
    },
    "/algo/fizzbuzz/stats": {
      "get": {
        "summary": "get stats about the most used parameters",
        "operationId": "stats",
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "type": "object",
              "required": [
                "count"
              ],
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "parameter": {
                  "$ref": "#/definitions/fizzbuzzParams"
                }
              }
            }
          },
          "500": {
            "description": "Internal error."
          },
          "503": {
            "description": "Not available."
          }
        }
      }
    },
    "/healthcheck": {
      "get": {
        "summary": "Healthcheck route.",
        "operationId": "healthcheck",
        "responses": {
          "200": {
            "description": "Ok."
          }
        }
      }
    }
  },
  "definitions": {
    "errorMsg": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "ErrInvalidParams",
            "ErrInvalidObject"
          ]
        }
      }
    },
    "fizzbuzzParams": {
      "type": "object",
      "required": [
        "limit",
        "word1",
        "word2"
      ],
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "word1": {
          "$ref": "#/definitions/fizzbuzzWord"
        },
        "word2": {
          "$ref": "#/definitions/fizzbuzzWord"
        }
      }
    },
    "fizzbuzzWord": {
      "type": "object",
      "properties": {
        "multiple": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "word": {
          "type": "string",
          "x-isnullable": false
        }
      }
    }
  },
  "responses": {
    "badRequest": {
      "description": "Bad request.",
      "schema": {
        "$ref": "#/definitions/errorMsg"
      }
    }
  }
}`))
}
