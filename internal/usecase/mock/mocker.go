// Code generated by MockGen. DO NOT EDIT.
// Source: /home/matt/go/src/github.com/pastequo/services.fizzbuzz/internal/usecase/interfaces.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	entity "github.com/pastequo/services.fizzbuzz/internal/entity"
)

// MockFizzBuzzComputer is a mock of FizzBuzzComputer interface.
type MockFizzBuzzComputer struct {
	ctrl     *gomock.Controller
	recorder *MockFizzBuzzComputerMockRecorder
}

// MockFizzBuzzComputerMockRecorder is the mock recorder for MockFizzBuzzComputer.
type MockFizzBuzzComputerMockRecorder struct {
	mock *MockFizzBuzzComputer
}

// NewMockFizzBuzzComputer creates a new mock instance.
func NewMockFizzBuzzComputer(ctrl *gomock.Controller) *MockFizzBuzzComputer {
	mock := &MockFizzBuzzComputer{ctrl: ctrl}
	mock.recorder = &MockFizzBuzzComputerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFizzBuzzComputer) EXPECT() *MockFizzBuzzComputerMockRecorder {
	return m.recorder
}

// ComputeFizzBuzz mocks base method.
func (m *MockFizzBuzzComputer) ComputeFizzBuzz(arg0 context.Context, arg1 entity.FizzBuzzParams) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ComputeFizzBuzz", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ComputeFizzBuzz indicates an expected call of ComputeFizzBuzz.
func (mr *MockFizzBuzzComputerMockRecorder) ComputeFizzBuzz(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComputeFizzBuzz", reflect.TypeOf((*MockFizzBuzzComputer)(nil).ComputeFizzBuzz), arg0, arg1)
}

// GetFizzBuzzStats mocks base method.
func (m *MockFizzBuzzComputer) GetFizzBuzzStats(arg0 context.Context) (uint, *entity.FizzBuzzParams, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFizzBuzzStats", arg0)
	ret0, _ := ret[0].(uint)
	ret1, _ := ret[1].(*entity.FizzBuzzParams)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetFizzBuzzStats indicates an expected call of GetFizzBuzzStats.
func (mr *MockFizzBuzzComputerMockRecorder) GetFizzBuzzStats(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFizzBuzzStats", reflect.TypeOf((*MockFizzBuzzComputer)(nil).GetFizzBuzzStats), arg0)
}
